name: Check licenses
on: [push]
env:
  PYTHONPATH: .

jobs:
  check_licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        id: setup-python
        with:
          python-version: "3.11"

      - name: Install Pipenv
        run: |
          pip install pipenv

      - name: Cache virtualenvs
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs/
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}

      - name: Install Dependencies and Check for GPL and GNU licenses
        run: |
          pipenv sync --dev
          pipenv install pip-licenses
          pipenv run pip-licenses --fail-on "GPL;GNU" --partial-match

      - name: Install Scancode-toolkit
        run: |
          git clone https://github.com/nexB/scancode-toolkit
          cd scancode-toolkit
          docker build --tag scancode-toolkit .
          docker run scancode-toolkit --help

      - name: Scan code base for GPL/ GNU licenses with Scancode-toolkit
        id: gpl_scan
        run: |
          docker run -v $PWD/:/project scancode-toolkit -clpeui -n 1 --ignore /project/scancode-toolkit/* --ignore /project/.github/* --ignore /project/scripts/* --json-pp /project/scan_results.json /project --verbose
          ./scripts/check_gpl.sh

      - name: Output file locations of GPL licenses
        if: steps.gpl_scan.outputs.found == '1'
        run: |
          echo "GPL licenses found in the following locations:"
          echo "${{ steps.gpl_scan.outputs.file_locations }}"

      - name: Fail if GPL license is found
        if: steps.gpl_scan.outputs.found == '1'
        run: |
          echo "GPL license found! Failing the job."
          exit 1

      - name: Check all files contain necessary license headers
        run: |
          ./scripts/check_license_headers.sh
